<?php

class CAYLTestCase extends DrupalUnitTestCase {

  var $MOCK_METADATA = "/CAYL/cache/0a137b375cc3881a70e186ce2172c8d1 2014-02-11T10:22:46Z";

  public static function getInfo() {
    return array(
      'name' => 'CAYL unit tests',
      'description' => 'Test that link annotation is working properly',
      'group' => 'CAYL',
    );
  }

  /**
   * Set up the test environment, and load our mock CAYLStorage module
   */
  function setUp() {
    drupal_load('module', 'cayl');
    module_load_include('inc','cayl','tests/MockCAYLStorage');
    parent::setUp();
  }

  /**
   * Tear down the test environment.
   * Must clean our MockCAYLStorage class out of the cache
   */
  function tearDown() {
    drupal_static_reset("_cayl_lookup_url");
    parent::tearDown();
  }

  /**
   * Make sure that the Storage class is being called correctly
   */

  public function testCAYLLookup() {
    $result = _cayl_lookup_url("http://google.com");
    $this->assertTrue(is_array($result));
    $this->assertTrue($result['data-cache'] == $this->MOCK_METADATA);
  }

  public function testpreprocess_link() {
    $vars = array( 'text' => 'Test link', 'path' => 'http://www.google.com', 'options' => array( 'attributes' => array()) );
    cayl_preprocess_link($vars);
    $this->assertTrue($vars['text']);
    $this->assertTrue($vars['options']['attributes']['data-cache'] == $this->MOCK_METADATA);
  }

  public function testpreprocess_linkLocal() {
    $vars = array( 'text' => 'Test link', 'path' => 'node/1', 'options' => array( 'attributes' => array()) );
    cayl_preprocess_link($vars);
    $this->assertTrue($vars['text']);
    $this->assertTrue(empty($var['options']['attributes']));
  }

  public function testpreprocess_linkOptionsNotSet() {
    $vars = array( 'text' => 'Test link', 'path' => 'http://www.google.com');
    cayl_preprocess_link($vars);
    $this->assertTrue($vars['text']);
    $this->assertTrue(empty($var['options']['attributes']));
  }

  public function testpreprocess_linkExistingAttributes() {
    $vars = array( 'text' => 'Test link', 'path' => 'http://www.google.com', 'options' => array( 'attributes' => array('data-bogus' => 'Franky')) );
    cayl_preprocess_link($vars);
    $this->assertTrue($vars['text']);
    $this->assertTrue($vars['options']['attributes']['data-cache'] == $this->MOCK_METADATA);
    $this->assertTrue($vars['options']['attributes']['data-bogus'] == "Franky");
  }

  public function testpreprocess_linkNoData() {
    $vars = array( 'text' => 'Test link', 'path' => 'http://nodata.example.com',
      'options' => array('attributes' => array(),
                         'href' => 'http://nodata.example.com',
                          'title' => 'Test link',
                          'html' => FALSE,
      ));
    cayl_preprocess_link($vars);
    $this->assertTrue($vars['text']);
    $this->assertTrue(empty($var['options']['attributes']));
  }

  public function testCAYLFilterEmpty() {
    $text = "";
    $result = _cayl_filter_process($text,null,null);
    $this->assertEqual($result,"");
  }

  public function testCAYLFilterSimpleReplaceSingleQuotes() {
    $text = "Hi there <a href='http://www.yahoo.com'>Yahoo</a>. Eat my donuts!";
    $result = _cayl_filter_process($text,null,null);
    $this->assertTrue(strpos($result,'data-cache') > 0);
  }

  public function testCAYLFilterSimpleReplaceDoubleQuotes() {
    $text = "Hi there <a href=\"http://www.yahoo.com\">Yahoo</a>. Eat my donuts!";
    $result = _cayl_filter_process($text,null,null);
    $this->assertTrue(strpos($result,'data-cache') > 0);
    $this->assertTrue(strpos($result,'data-cache') > 0);
  }

  public function testCAYLFilterSimpleNoReplace() {
    $text = "Hi there <a href='node/1'>node links</a>. Eat my meatloaf!";
    $result = _cayl_filter_process($text,null,null);
    $this->assertFalse(strpos($result,'data-cache'));
  }

  public function testCAYLAddBehaviourBad() {
    $result = _cayl_add_behavior("bogus");
    $this->assertEqual($result,"bogus");
  }

}


class CAYLWebTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'CAYL Drupal tests',
      'description' => 'Test that integration with Drupal configuration is working properly',
      'group' => 'CAYL',
    );
  }

  /**
   * Set up the test environment, and load our mock CAYLStorage module
   */
  function setUp() {
    drupal_load('module', 'cayl');
    module_load_include('inc','cayl','tests/MockCAYLStorage');
    parent::setUp();
  }

  /**
   * Tear down the test environment.
   * Must clean our MockCAYLStorage class out of the cache
   */
  function tearDown() {
    drupal_static_reset("_cayl_lookup_url");
    parent::tearDown();
  }

  public function testCAYLAddBehaviourUpPopup() {
    variable_set('cayl_available_action', CAYL_ACTION_POPUP);
    $result = _cayl_add_behavior("up");
    $this->assertEqual($result,"up popup");
  }

  public function testCAYLAddBehaviourUpHover() {
    variable_set('cayl_available_action', CAYL_ACTION_HOVER);
    variable_set('cayl_available_action_hover', 4);
    $result = _cayl_add_behavior("up");
    $this->assertEqual($result,"up hover:4");
  }

  public function testCAYLAddBehaviourUpNone() {
    variable_set('cayl_available_action', CAYL_ACTION_NONE);
    $result = _cayl_add_behavior("up");
    $this->assertNull($result);
  }

  public function testCAYLAddBehaviourDownHover() {
    variable_set('cayl_unavailable_action', CAYL_ACTION_HOVER);
    variable_set('cayl_available_action', CAYL_ACTION_POPUP);
    variable_set('cayl_unavailable_action_hover', 1);
    $result = _cayl_add_behavior("down");
    $this->assertEqual($result,"down hover:1");
  }

  public function testCAYLAddBehaviourDownCache() {
    variable_set('cayl_unavailable_action', CAYL_ACTION_CACHE);
    $result = _cayl_add_behavior("down");
    $this->assertEqual($result,"down cache");
  }


}
